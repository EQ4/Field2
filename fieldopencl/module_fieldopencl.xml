<?xml version="1.0" encoding="UTF-8"?>
<project name="module_fieldopencl" default="compile.module.fieldopencl">
  <dirname property="module.fieldopencl.basedir" file="${ant.file.module_fieldopencl}"/>
  
  <property name="module.jdk.home.fieldopencl" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.fieldopencl" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.fieldopencl" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.fieldopencl" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>
  
  <property name="fieldopencl.output.dir" value="${module.fieldopencl.basedir}/../out/production/fieldopencl"/>
  <property name="fieldopencl.testoutput.dir" value="${module.fieldopencl.basedir}/../out/test/fieldopencl"/>
  
  <path id="fieldopencl.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="fieldopencl.module.production.classpath">
    <path refid="${module.jdk.classpath.fieldopencl}"/>
    <path refid="library.opencl.classpath"/>
    <pathelement location="${fieldwork2.output.dir}"/>
    <pathelement location="${fieldlinker.output.dir}"/>
    <pathelement location="${fieldagent.output.dir}"/>
    <pathelement location="${basedir}/fieldnashorn/external/nashorn-local.jar"/>
  </path>
  
  <path id="fieldopencl.runtime.production.module.classpath">
    <pathelement location="${fieldopencl.output.dir}"/>
    <path refid="library.opencl.classpath"/>
    <path refid="fieldwork2.runtime.production.module.classpath"/>
    <path refid="fieldlinker.runtime.production.module.classpath"/>
    <path refid="fieldagent.runtime.production.module.classpath"/>
    <pathelement location="${basedir}/fieldnashorn/external/nashorn-local.jar"/>
  </path>
  
  <path id="fieldopencl.module.classpath">
    <path refid="${module.jdk.classpath.fieldopencl}"/>
    <pathelement location="${fieldopencl.output.dir}"/>
    <path refid="library.opencl.classpath"/>
    <pathelement location="${fieldwork2.testoutput.dir}"/>
    <pathelement location="${fieldwork2.output.dir}"/>
    <pathelement location="${fieldlinker.testoutput.dir}"/>
    <pathelement location="${fieldlinker.output.dir}"/>
    <pathelement location="${fieldagent.testoutput.dir}"/>
    <pathelement location="${fieldagent.output.dir}"/>
    <pathelement location="${basedir}/fieldnashorn/external/nashorn-local.jar"/>
  </path>
  
  <path id="fieldopencl.runtime.module.classpath">
    <pathelement location="${fieldopencl.testoutput.dir}"/>
    <pathelement location="${fieldopencl.output.dir}"/>
    <path refid="library.opencl.classpath"/>
    <path refid="fieldwork2.runtime.module.classpath"/>
    <path refid="fieldlinker.runtime.module.classpath"/>
    <path refid="fieldagent.runtime.module.classpath"/>
    <pathelement location="${basedir}/fieldnashorn/external/nashorn-local.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.fieldopencl">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.fieldopencl">
    <patternset refid="excluded.from.module.fieldopencl"/>
  </patternset>
  
  <path id="fieldopencl.module.sourcepath">
    <dirset dir="${module.fieldopencl.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.fieldopencl" depends="compile.module.fieldopencl.production,compile.module.fieldopencl.tests" description="Compile module fieldopencl"/>
  
  <target name="compile.module.fieldopencl.production" depends="compile.module.fieldwork2,compile.module.fieldlinker,compile.module.fieldagent" description="Compile module fieldopencl; production classes">
    <mkdir dir="${fieldopencl.output.dir}"/>
    <javac destdir="${fieldopencl.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.fieldopencl}/javac">
      <compilerarg line="${compiler.args.fieldopencl}"/>
      <bootclasspath refid="fieldopencl.module.bootclasspath"/>
      <classpath refid="fieldopencl.module.production.classpath"/>
      <src refid="fieldopencl.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.fieldopencl"/>
    </javac>
    
    <copy todir="${fieldopencl.output.dir}">
      <fileset dir="${module.fieldopencl.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.fieldopencl.tests" depends="compile.module.fieldopencl.production" description="compile module fieldopencl; test classes" unless="skip.tests"/>
  
  <target name="clean.module.fieldopencl" description="cleanup module">
    <delete dir="${fieldopencl.output.dir}"/>
    <delete dir="${fieldopencl.testoutput.dir}"/>
  </target>
</project>